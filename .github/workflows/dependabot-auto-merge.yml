name: "Auto-merge Dependabot updates"

on:
  pull_request:
    types:
      - opened
      - labeled
      - synchronize
      - ready_for_review
  check_suite:
    types:
      - completed

permissions:
  contents: write
  pull-requests: write

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    if: >
      (
        github.event_name == 'pull_request' &&
        github.event.pull_request.user.login == 'dependabot[bot]' &&
        contains(github.event.pull_request.labels.*.name, 'automerge')
      )
      ||
      (
        github.event_name == 'check_suite' &&
        github.event.check_suite.conclusion == 'success'
      )
    steps:
      - uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // Pick the PR from either event
            const pr = context.payload.pull_request
                    || context.payload.check_suite.pull_requests[0];

            // 1) Only Dependabot-authored PRs
            if (pr.user.login !== 'dependabot[bot]') return;

            // 2) Only if it's labelled “automerge”
            const { data: labels } = await github.rest.issues.listLabelsOnIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number
            });
            if (!labels.some(l => l.name === 'automerge')) return;

            // 3) All status checks must be green
            const { data: statuses } = await github.rest.repos.listCommitStatusesForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: pr.head.sha
            });
            if (statuses.some(s => s.state !== 'success')) return;

            // 4) Merge with squash
            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number,
              merge_method: 'squash'
            });
